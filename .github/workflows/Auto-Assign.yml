name: Create Repo - Assign
on:
  issues:
    types:
      - opened
      - edited

permissions:
  contents: read

env:
  number_of_assignees: 1

jobs:
  assign:
    name: Assign new issue
    runs-on: ubuntu-latest
    if: contains(github.event.issue.labels.*.name, 'New-Project')
    steps:
      - name: Generate app token
        uses: actions/create-github-app-token@v1
        id: authenticate
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: PSModule/debug@v0

      - uses: PSModule/Initialize-PSModule@main

      - name: Test
        env:
          body: ${{ github.event.issue.body }}
        shell: pwsh
        run: |
          $VerbosePreference = "Continue"
          Start-LogGroup "Issue Body"
          $env:body
          Stop-LogGroup

          Start-LogGroup "Issue Body Split"
          # Read the content of the file
          $content = $env:body.Split([Environment]::NewLine) | Where-Object { $_ -ne "" }

          # Initialize an array to store the results
          $results = @()

          # Initialize variables to store the current header and paragraph
          $currentHeader = ""
          $currentParagraph = ""

          # Loop through each line of the file content
          foreach ($line in $content) {
              Write-Verbose "Processing line: [$line]"
              if ($line -match "^### (.+)$") {
                  # If a new header is found, store the current header and paragraph in the results
                  if ($currentHeader -ne "") {
                      $results += [PSCustomObject]@{
                          Header = $currentHeader
                          Paragraph = $currentParagraph.Trim()
                      }
                  }

                  # Update the current header and reset the paragraph
                  $currentHeader = $matches[1]
                  $currentParagraph = ""
              } else {
                  # Append the line to the current paragraph
                  $currentParagraph += " " + $line
              }
          }

          # Add the last header and paragraph to the results
          if ($currentHeader -ne "") {
              $results += [PSCustomObject]@{
                  Header = $currentHeader
                  Paragraph = $currentParagraph.Trim()
              }
          }

          # Output the results
          $results | Format-Table -AutoSize

          Stop-LogGroup

      - name: Acknowledge
        uses: actions/github-script@v7
        env:
          reviewer_team: ${{ vars.reviewer_team }}
        with:
          github-token: ${{ steps.authenticate.outputs.token }}
          script: |
            const body = `
            @${context.actor} : Hey!  Let's get this issue assigned to someone from the @${context.repo.owner}/${process.env.reviewer_team} team while we validate the request.
            `

            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body
            })

      - name: Auto-assign issue
        uses: pozil/auto-assign-issue@v2.0.0
        with:
          repo-token: ${{ steps.authenticate.outputs.token }}
          teams: ${{ vars.reviewer_team }}
          numOfAssignee: ${{ env.number_of_assignees }}
